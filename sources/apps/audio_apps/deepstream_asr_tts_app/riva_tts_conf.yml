%YAML 1.2
################################################################################
# Copyright (c) 2021 NVIDIA Corporation.  All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

---
name: riva_server
detail:
  server_uri: "localhost:50051"

---
name: riva_tts_stream
detail:
  language_code: en-US
  voice_name: ljspeech
  # Currently only LINEAR_PCM encoding is supported at 22050 Hz
  encoding: LINEAR_PCM

---
name: ds_riva_tts_plugin
detail:
  # Output modes: [0, 1]
  # 0 : Default mode, output the audio as received from the server without
  #     adding any silence periods when there is no input.
  #     Suitable for non-live sinks like wavenc.
  # 1 : Insert silence mode: Insert silence in the output when audio from
  #     server is not available, useful for live outputs like pulsesink.
  output_mode : 1
  # Framing modes: [0, 1, 2]
  # 0 : Default mode: use the chunk size as provided by Riva server.
  # 1 : Split mode: Split the server response in to the configured frame size.
  #     Last chunk of the response is not padded.
  # 2 : Split with padding mode: Split the server response in to configured frame
  #     size, pad last chunk with zeros if less than frame size.
  framing_mode : 2
  # Output frame size in number of samples
  frame_size : 4410
