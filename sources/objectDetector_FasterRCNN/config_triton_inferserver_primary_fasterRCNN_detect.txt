################################################################################
# Copyright (c) 2021 NVIDIA Corporation.  All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

infer_config {
  unique_id: 5
  gpu_ids: [0]
  max_batch_size: 1
  backend {
    triton {
      model_name: "fasterRCNN"
      version: -1
      model_repo {
        root: "./triton_model_repo"
        log_level: 2
        strict_model_config: true
        # Triton runtime would reserve 64MB pinned memory
        pinned_memory_pool_byte_size: 67108864
        # Triton runtim would reserve 64MB CUDA device memory on GPU 0
        cuda_device_memory { device: 0, memory_pool_byte_size: 67108864 }
      }
    }
    output_mem_type: MEMORY_TYPE_DEFAULT
  }

  preprocess {
    network_format: IMAGE_FORMAT_BGR
    tensor_order: TENSOR_ORDER_LINEAR
    maintain_aspect_ratio: 0
    frame_scaling_hw: FRAME_SCALING_HW_DEFAULT
    frame_scaling_filter: 1
    normalize {
      scale_factor: 1.0
      channel_offsets: [102.9801, 115.9465, 122.7717]
    }
  }

  postprocess {
    labelfile_path: "./labels.txt"
    detection {
      num_detected_classes: 21
      # skip background
      per_class_params {
        key: 0
        value { pre_threshold: 1.1 }
      }
      custom_parse_bbox_func: "NvDsInferParseCustomFasterRCNN"
      nms {
        confidence_threshold: 0.5
        iou_threshold: 0.3
        topk : 20
      }
    }
  }

  extra {
    copy_input_to_host_buffers: false
  }

  custom_lib {
    #path: "nvdsinfer_custom_impl_fasterRCNN/libnvdsinfer_custom_impl_fasterRCNN.so"
    path: "libnvdsinfer_custom_impl_fasterRCNN.so"
  }
}
input_control {
  process_mode: PROCESS_MODE_FULL_FRAME
  interval: 0
}

output_control {
  detect_control {
    default_filter { bbox_filter { min_width: 32, min_height: 32 } }
  }
  output_tensor_meta: true
}
